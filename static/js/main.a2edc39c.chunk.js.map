{"version":3,"sources":["components/jumbotron.js","components/searchBar.js","utils/API.js","components/employeeTable.js","App.js","index.js"],"names":["Jumbotron","className","id","SearchBar","props","type","placeholder","value","search","onChange","handleInputChange","name","axios","get","EmployeeTable","state","results","order","e","target","searchName","toLowerCase","setState","handleFormSubmit","preventDefault","sortFirstName","sortEmployees","sort","x","y","first","reverse","sortLastName","last","API","then","res","data","console","log","catch","err","this","onClick","map","item","includes","src","picture","thumbnail","alt","phone","email","DateFormat","dob","date","login","uuid","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2edc39c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/jumbotron.css\"\n\nfunction Jumbotron() {\n    return (\n    <div className=\"jumbo\">\n        <div className=\"jumbotron jumbotron-fluid\" id=\"jumbotronId\">\n            <div className=\"container\">\n                <h1 className=\"display-3\">Company Directory</h1>\n                <p className=\"juboText\">Search by employee name here</p>\n            </div>\n      </div>\n    </div>\n    );\n  }\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"../styles/searchBar.css\"\n\nconst SearchBar = (props) => {\n    return (\n        <form>\n            <div className=\"form-inline\">\n                <div className=\"input-group mb-3\">\n                    <input \n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        id=\"search\"\n                        value={props.search}\n                        onChange={props.handleInputChange}\n                        name=\"search\"\n                    />\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default SearchBar;\n","import axios from \"axios\";\nconst url = 'https://randomuser.me/api/?results=100';\n\nexport default {\n    GetApi: function () {\n        return axios.get(url)\n    }\n}\n","import React, { Component } from \"react\";\nimport API from \"../utils/API.js\"\nimport \"../styles/employeeTable.css\"\nimport SearchBar from \"../components/searchBar\"\nimport DateFormat from 'dateformat'\n\nclass EmployeeTable extends Component {\n    state = {\n        search: \"\",\n        results: [],\n        order: \"\"\n    }\n\n    // When the component mounts, get a list of names and update this.state.results\n    componentDidMount() {\n        API.GetApi()\n          .then(res => {this.setState({ results: res.data.results })\n            console.log(this.state.results)\n          }).catch(err => console.log(err))\n      }\n\n    // handleInputChange function - for the input inside the search bar,  function search for target.value\n    handleInputChange = e => {\n        if(e.target.name === 'search') {\n            const searchName = e.target.value.toLowerCase();\n            this.setState({ search: searchName })\n        }\n    }\n    // handleFormSubmit\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    // first name \n    sortFirstName = () => {\n        const sortEmployees = this.state.results.sort((x, y) => {\n            if(y.name.first > x.name.first) {\n                return -1\n            }\n            if(x.name.first > y.name.first) {\n                return 1\n            }\n            return 0;\n        });\n        if(this.state.order === 'desc') {\n            // reverses elems in array\n            sortEmployees.reverse();\n            this.setState({ order: 'asc' });\n        } else {\n            this.setState({ order: 'desc' });\n        } \n        this.setState({ results: sortEmployees });\n    }\n\n    // last name \n    sortLastName = () => {\n        const sortEmployees = this.state.results.sort((x, y) => {\n            if(y.name.last > x.name.last) {\n                return -1\n            }\n            if(x.name.last > y.name.last) {\n                return 1\n            }\n            return 0;\n        });\n        if(this.state.order === 'desc') {\n            // reverses elems in array\n            sortEmployees.reverse();\n            this.setState({ order: 'asc' });\n        } else {\n            this.setState({ order: 'desc' });\n        } \n        this.setState({ results: sortEmployees });\n    }\n\n    // render items - create the jsx/html for rendering - name, last name, phone, email, DOB and sort them out \n    render() {\n        return (\n            <div>\n                <SearchBar handleInputChange={this.handleInputChange} \n                search={this.state.search} />\n\n                <div className=\"table-responsive\">\n                    <table className=\"table table-responsive text-center table-striped\">\n                        <thead>\n                            <tr>\n                                <th>Image</th>\n                                <th>Firt Name <span onClick={this.sortFirstName} ></span></th>\n                                <th>Last Name <span onClick={this.sortLastName} ></span></th>\n                                <th>Phone</th>\n                                <th>Email</th>\n                                <th>DOB</th>\n                            </tr>\n                        </thead>\n\n                            { this.state.results && this.state.results.map(item =>\n                                item.name.first.toLowerCase().includes(this.state.search) ?\n                                <tbody key={item.login.uuid}>\n                                    <tr>\n                                    <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\n                                    <td >{item.name.first}</td>\n                                    <td >{item.name.last}</td>\n                                    <td >{item.phone}</td>\n                                    <td >{item.email}</td>\n                                    <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>  \n                                    </tr>\n                                </tbody>\n                            :\n                                item.name.last.toLowerCase().includes(this.state.search) ?\n                                <tbody key={item.login.uuid}>\n                                <tr>\n                                <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\n                                    <td >{item.name.first}</td>\n                                    <td >{item.name.last}</td>\n                                    <td >{item.phone} </td>\n                                    <td >{item.email}</td>\n                                    <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>  \n                                </tr>\n                                </tbody>\n                            :\n                                null\n                        )}\n                    </table>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmployeeTable;","import React from \"react\";\nimport './App.css';\nimport Jumbotron from './components/jumbotron'\nimport SearchBar from './components/searchBar'\nimport EmployeeTable from './components/employeeTable'\n\n\nfunction App() {\n  return (\n    <div>\n      <Jumbotron/>\n      <SearchBar/>\n      <EmployeeTable/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}